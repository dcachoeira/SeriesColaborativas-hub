spec_i([ mnproc,0,'SDLogin_Level_Detail','SDLogin_Level_Detail',0,por,'15_0_9-121631' ]).
 
struct_i(2,1,[],[]).
 
level_i(2,[ 3,[ [ 3,many ] ],[],[],[ [ [ 3 ],[ 11,57,55 ] ] ],[ [ [ 3 ],[] ] ],[ 11 ],'IUSUARIO',[],[] ]).
 
tw_i(2,[]).
 
lwi_i(2,[ [] ]).
 
 
 
 
ta_i(2,[ [ [ 3,11 ],[ 3,57 ],[ 3,55 ] ] ]).
 
las_i(2,[ [ 11,57,55 ] ]).
 
lac_i(2,[ [] ]).
 
 
 
 
 
 
 
rule_i(0,datastore(2,'DS_LAST_CHANGE','')).
rule_i(0,datastore(2,'LOCK_RETRY','10')).
rule_i(0,datastore(2,'WAIT_RECORD','0')).
rule_i(0,datastore(2,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(2,'COMMENT_ON','No')).
rule_i(0,datastore(2,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(2,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(2,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(2,'CS_SCHEMA',gam)).
rule_i(0,datastore(2,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(2,'JRN400','QSQJRN')).
rule_i(0,datastore(2,'CREATE_SAVF','Yes')).
rule_i(0,datastore(2,'PGMLIB','')).
rule_i(0,datastore(2,'DTALIB','')).
rule_i(0,datastore(2,'CC_USER_PASS',wp„ÄsÁ¹)).
rule_i(0,datastore(2,'CC_USER_ID',sa)).
rule_i(0,datastore(2,'CC_SERVER',localhost)).
rule_i(0,datastore(2,'CC_DBNAME','SeriesColaborativas')).
rule_i(0,datastore(2,'RecycleRWMin','30')).
rule_i(0,datastore(2,'RecycleRWType','1')).
rule_i(0,datastore(2,'RecycleRW','-1')).
rule_i(0,datastore(2,'POOL_STARTUP','No')).
rule_i(0,datastore(2,'POOLSIZE_RW','10')).
rule_i(0,datastore(2,'UnlimitedRWPool','-1')).
rule_i(0,datastore(2,'PoolRWEnabled','-1')).
rule_i(0,datastore(2,'CS_RPCPGML','')).
rule_i(0,datastore(2,'JDBC_DATASOURCE','')).
rule_i(0,datastore(2,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(2,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(2,'USER_PASSWORD','gnxÔ.“êâ¿')).
rule_i(0,datastore(2,'USER_ID',sa)).
rule_i(0,datastore(2,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(2,'CS_CONNECT','First')).
rule_i(0,datastore(2,'DBMS_PORT','')).
rule_i(0,datastore(2,'CS_SERVER',localhost)).
rule_i(0,datastore(2,'CS_DBNAME','SeriesColaborativas')).
rule_i(0,datastore(2,'CS_FLEDSNAME','')).
rule_i(0,datastore(2,'CS_DRVNAME','sql server')).
rule_i(0,datastore(2,'CS_DSNAME','')).
rule_i(0,datastore(2,'DB_URL','')).
rule_i(0,datastore(2,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(2,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(2,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(2,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(2,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(2,'MAIN_DS','-1')).
rule_i(0,datastore(2,'REORG_GEN','8')).
rule_i(0,datastore(2,'HelpKeyword','23')).
rule_i(0,datastore(2,'DBMS',12)).
rule_i(0,datastore(2,'NAME','GAM')).
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'CC_USER_PASS',wp„ÄsÁ¹)).
rule_i(0,datastore(1,'CC_USER_ID',sa)).
rule_i(0,datastore(1,'CC_SERVER',localhost)).
rule_i(0,datastore(1,'CC_DBNAME','SeriesColaborativas')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(1,'USER_PASSWORD','gnxÔ.“êâ¿')).
rule_i(0,datastore(1,'USER_ID',sa)).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER',localhost)).
rule_i(0,datastore(1,'CS_DBNAME','SeriesColaborativas')).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('FullyQualifiedName','SDLogin_Level_Detail')).
rule_i(0,prop('STD_FUNC_OBJECT','Yes')).
rule_i(0,prop('IntegratedSecurityLevel','SecurityNone')).
rule_i(0,prop('CacheCheckForNewData','CacheCheckForNewDataEveryTime')).
rule_i(0,prop('CacheEnabled','-1')).
rule_i(0,prop(autoRefreshTime,'0')).
rule_i(0,prop(dataSelectorParameters,[])).
rule_i(0,prop(dataSelector,'')).
rule_i(0,prop(adsPosition,'Bottom')).
rule_i(0,prop(showAds,'-1')).
rule_i(0,prop('DeepLinkName','')).
rule_i(0,prop(idConnectivitySupport,idInherit)).
rule_i(0,prop(caption,'SDLogin')).
rule_i(0,prop('IsMain','0')).
rule_i(0,prop('ObjectVisibility','Public')).
rule_i(0,prop('Folder',o(120,'Root Module'))).
rule_i(0,prop('Description','SDLogin')).
rule_i(0,prop('Name','SDLogin')).
rule_i(0,rule([ a(22,[ 'Rfr','"Atualizar"','5' ]) ],[],[],[])).
rule_i(0,maingen(15)).
rule_i(0,prop('DPRV_WSPROTOCOL','REST')).
rule_i(0,prop(idISWEBSERVICE,'-1')).
rule_i(0,prop('ObjName','SDLogin_Level_Detail')).
rule_i(0,prop('IntegratedSecurityLevel','SecurityNone')).
rule_i(0,prop('SDPanel','True')).
rule_i(0,parm([ 'Gxid','GXM1SDLogin_Level_DetailSdt' ],[])).
rule_i(0,parmio([ [ 'Gxid',in ],[ 'GXM1SDLogin_Level_DetailSdt',out ] ])).
rule_i(0,prop('OutputSDT',o(26,'SDLogin_Level_DetailSdt'))).
 
a_i(1,1,f,'Err',[],[ [],[ t('0',3) ] ]).
a_i(2,2,t,3,[],[ [],'IUSUARIO',[] ]).
 
v_i(f,i,1,[]).
v_i(f,o,1,'Err').
v_i(t,i,2,[]).
v_i(t,o,2,11).
v_i(t,o,2,57).
v_i(t,o,2,55).
 
 
 
 
 
 
attri_i(11,[ 'UsuarioId',int,18,0,'ZZZZZZZZZZZZZZZZZ9',0,'Id','',0 ]).
attri_i(57,[ 'UsuarioEmail',svchar,100,0,'',0,'Email','',0 ]).
attri_i(55,[ 'UsuarioSenha',svchar,32,0,'',0,'Senha','',0 ]).
attri_i('Errmsg',[ 'Gx_emsg',char,70,0,'',1,'Error text','',8 ]).
attri_i('Err',[ 'Gx_err',int,3,0,'ZZ9',1,'Error code','',7 ]).
attri_i('GXM1SDLogin_Level_DetailSdt',[ 'GXM1SDLogin_Level_DetailSdt',o('SDLogin_Level_DetailSdt'),0,0,'',0,'GXM1SDLogin_Level_DetailSdt','',6 ]).
attri_i('Gxid',[ gxid,int,8,0,'',0,'Gxid','',5 ]).
 
table_i(3,[ 'Usuario',[ 11,55,57 ],'Usuário','Usuario' ]).
 
index_i(3,[ 'IUSUARIO',u,[ 11 ],'IUsuario' ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
enumerated_i(2,52,187).
 
enum_value_i(2,187,'1','Mobile','"Mobile"',[ none ]).
enum_value_i(2,187,'2','Administrador','"Administrador"',[ none ]).
 
enum_value_info_i(2,187,'TipoUsuario').
 
enum_type_i(2,187,int,4,0).
 
dom_info_i(189,[ 'Senha' ]).
dom_info_i(25,[ 'GeneXus\Email' ]).
dom_info_i(173,[ 'Id' ]).
dom_info_i(174,[ 'Nome' ]).
dom_info_i(187,[ 'TipoUsuario' ]).
dom_info_i(188,[ 'Login' ]).
dom_info_i(113,[ 'GAMGUID' ]).
 
 
break_i(2,nvg,1,[],[ [ 55,57,11 ],[],[] ]).
break_i(1,rpt,0,[],[ [],[],[] ]).
 
b_group_i(1,1,lit,0,1,1).
b_group_i(1,2,nvg,2,1,1).
b_group_i(2,1,lit,0,2,2).
b_group_i(1,3,lit,0,6,0).
 
b_line_i(1,2,1,cmd,2,[ t('',121,1,0) ]).
b_line_i(2,2,1,cmd,2,[ t('',107,2,0),t([ t('GXM1SDLogin_Level_DetailSdt',23,2,0),t('Usuarioid',3,2,0) ],29,2,0),t(=,10,2,0),t(11,2,2,0) ]).
b_line_i(3,2,1,cmd,2,[ t('',107,2,0),t([ t('GXM1SDLogin_Level_DetailSdt',23,2,0),t('Usuarioemail',3,2,0) ],29,2,0),t(=,10,2,0),t(57,2,2,0) ]).
b_line_i(4,2,1,cmd,2,[ t('',107,2,0),t([ t('GXM1SDLogin_Level_DetailSdt',23,2,0),t('Usuariosenha',3,2,0) ],29,2,0),t(=,10,2,0),t(55,2,2,0) ]).
b_line_i(5,2,1,cmd,2,[ t('',139,2,0) ]).
b_line_i([ 5,1 ],2,1,cmd,2,[ t('',128,2,0) ]).
 
 
 
 
 
page_layout_i([ 66,0,6 ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
att_prop_i(2,55,'ExternalName','UsuarioSenha',d).
att_prop_i(2,55,'ExternalNamespace','SeriesColaborativas',d).
att_prop_i(2,55,'EmptyAsNull','Yes',d).
att_prop_i(2,55,idBasedOn,189,v).
att_prop_i(2,55,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,55,'DB_NLS_SUPPORT','No',d).
att_prop_i(2,55,'AttRegEx','',d).
att_prop_i(2,55,'AttValidationFailedMsg','',d).
att_prop_i(2,55,'FullName','UsuarioSenha',v).
att_prop_i(2,57,'ExternalName','UsuarioEmail',d).
att_prop_i(2,57,'ExternalNamespace','SeriesColaborativas',d).
att_prop_i(2,57,'EmptyAsNull','Yes',d).
att_prop_i(2,57,idBasedOn,25,v).
att_prop_i(2,57,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,57,'DB_NLS_SUPPORT','No',d).
att_prop_i(2,57,'AttRegEx','^((\w+([-+.'']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*)|(\s*))$',d).
att_prop_i(2,57,'AttValidationFailedMsg','GXM_DoesNotMatchRegExp',d).
att_prop_i(2,57,'FullName','UsuarioEmail',v).
att_prop_i(2,11,'ExternalName','UsuarioId',d).
att_prop_i(2,11,'ExternalNamespace','SeriesColaborativas',d).
att_prop_i(2,11,'EmptyAsNull','Yes',d).
att_prop_i(2,11,idBasedOn,173,v).
att_prop_i(2,11,'AUTONUMBER','-1',d).
att_prop_i(2,11,'AUTONUMBER_START','1',d).
att_prop_i(2,11,'AUTONUMBER_STEP','1',d).
att_prop_i(2,11,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(2,11,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,11,'AttRegEx','',d).
att_prop_i(2,11,'AttValidationFailedMsg','',d).
att_prop_i(2,11,'FullName','UsuarioId',v).
 
 
tbl_att_prop_i(2,3,11,'AllowNulls',n).
tbl_att_prop_i(2,3,11,'AUTONUMBER',y).
tbl_att_prop_i(2,3,55,'AllowNulls',n).
tbl_att_prop_i(2,3,57,'AllowNulls',n).
 
 
 
 
 
 
struct_dt_i([ 26,1000000,0 ],name,'SDLogin_Level_DetailSdt').
struct_dt_i([ 26,1000000,0 ],camelname,'SDLogin_Level_DetailSdt').
struct_dt_i([ 26,1000000,0 ],camelnameex,'SDLogin_Level_DetailSdt').
struct_dt_i([ 26,1000000,0 ],collection,'False').
struct_dt_i([ 26,1000000,0 ],wwsd_sdt,'True').
struct_dt_i([ 26,1000000,0 ],panel,[ 'Level.Detail' ]).
struct_dt_i([ 26,1000000,0 ],key,[ 3,[ 11 ],[] ]).
struct_dt_i([ 26,1000000,0 ],fullname,'SDLogin_Level_DetailSdt').
struct_dt_i([ 26,1000000,0 ],modified,yes).
 
struct_dt_elem_i([ 26,1000000,0 ],1,name,'Usuarioid').
struct_dt_elem_i([ 26,1000000,0 ],1,camelname,'UsuarioId').
struct_dt_elem_i([ 26,1000000,0 ],1,type,[ 4,18,0 ]).
struct_dt_elem_i([ 26,1000000,0 ],1,length,18).
struct_dt_elem_i([ 26,1000000,0 ],1,decimals,0).
struct_dt_elem_i([ 26,1000000,0 ],1,sign,0).
struct_dt_elem_i([ 26,1000000,0 ],1,collection,'False').
struct_dt_elem_i([ 26,1000000,0 ],1,islevel,'False').
struct_dt_elem_i([ 26,1000000,0 ],2,name,'Usuarioemail').
struct_dt_elem_i([ 26,1000000,0 ],2,camelname,'UsuarioEmail').
struct_dt_elem_i([ 26,1000000,0 ],2,type,[ 13,100,0 ]).
struct_dt_elem_i([ 26,1000000,0 ],2,length,100).
struct_dt_elem_i([ 26,1000000,0 ],2,decimals,0).
struct_dt_elem_i([ 26,1000000,0 ],2,sign,0).
struct_dt_elem_i([ 26,1000000,0 ],2,collection,'False').
struct_dt_elem_i([ 26,1000000,0 ],2,islevel,'False').
struct_dt_elem_i([ 26,1000000,0 ],3,name,'Usuariosenha').
struct_dt_elem_i([ 26,1000000,0 ],3,camelname,'UsuarioSenha').
struct_dt_elem_i([ 26,1000000,0 ],3,type,[ 13,32,0 ]).
struct_dt_elem_i([ 26,1000000,0 ],3,length,32).
struct_dt_elem_i([ 26,1000000,0 ],3,decimals,0).
struct_dt_elem_i([ 26,1000000,0 ],3,sign,0).
struct_dt_elem_i([ 26,1000000,0 ],3,collection,'False').
struct_dt_elem_i([ 26,1000000,0 ],3,islevel,'False').
struct_dt_elem_i([ 26,1000000,0 ],1,attributeid,'11').
struct_dt_elem_i([ 26,1000000,0 ],2,attributeid,'57').
struct_dt_elem_i([ 26,1000000,0 ],3,attributeid,'55').
 
 
 
 
 
sub_info_i(146,'SDLogin_Level_Detail',0,0,[ [],[] ]).
 
 
pgm_callprotocol_i(mnproc,0,'SDLOGIN_LEVEL_DETAIL','INTERNAL').
 
 
 
 
module_info_i('GeneXus','CSHARP_NAME_SPACE','GeneXus.Core').
module_info_i('GeneXus','AssemblyName','GeneXus.dll').
 
 
service_i(input,[ [] ]).
 
 
 
optimize_i(2,0,[ maxrows(1) ]).
 
 
 
 
 
